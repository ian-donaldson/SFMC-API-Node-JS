/*
 * SalesforceMarketingCloudLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
 'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.SocialStudioUsersController;
const UpdateUserRequest = testerlib.UpdateUserRequest;
const ChangeUserPasswordRequest = testerlib.ChangeUserPasswordRequest;

describe("SocialStudioUsersController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * TODO: Add Description
     */
    it("should testListUsers response", function testListUsersTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';

        controller.listUsers(accessToken, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testGetUserDetails response", function testGetUserDetailsTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';

        controller.getUserDetails(accessToken, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testCreateUser response", function testCreateUserTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';
        let body = ' {\n    "title": "API User", \n    "username": "APIUser", \n    "displayName": API User", \n    "email": "bill@gmail.com", \n    "timeZone": "Europe/London", \n    "enabled": true, \n    "avatarURL": null, \n    "userRoleId": 6, \n    "orgRoleId": 1, \n    "languageId": 1, \n    "clientId": 1\n  }';

        controller.createUser(accessToken, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

});
