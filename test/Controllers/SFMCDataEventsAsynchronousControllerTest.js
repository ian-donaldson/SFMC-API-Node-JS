/*
 * SalesforceMarketingCloudLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
 'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.SFMCDataEventsAsynchronousController;
const IncrementColumnObjectIDRequest = testerlib.IncrementColumnObjectIDRequest;
const IncrementColumnKeyRequest = testerlib.IncrementColumnKeyRequest;
const UpsertRowObjectIDRequest = testerlib.UpsertRowObjectIDRequest;
const UpsertRowKeyRequest = testerlib.UpsertRowKeyRequest;
const UpsertRowSetKeyRequest = testerlib.UpsertRowSetKeyRequest;
const UpsertRowSetObjectIDRequest = testerlib.UpsertRowSetObjectIDRequest;

describe("SFMCDataEventsAsynchronousController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * Upserts a data extension row by object id.
     */
    it("should testIncrementColumnObjectID response", function testIncrementColumnObjectIDTest(done) {
        // parameters for the API call
        let step = 2;
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"values": {"LastLogin": "2013-05-23T14:32:00Z", "IsActive": true, "FirstName": "John", "FollowerCount": 2, "LastName": "Smith"}}, 'IncrementColumnObjectIDRequest');

        controller.updateIncrementColumnObjectID(step, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * Upserts a data extension row by key.
     */
    it("should testIncrementColumnKey response", function testIncrementColumnKeyTest(done) {
        // parameters for the API call
        let step = 2;
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"values": {"LastLogin": "2013-05-23T14:32:00Z", "IsActive": true, "FirstName": "John", "FollowerCount": 2, "LastName": "Smith"}}, 'IncrementColumnKeyRequest');

        controller.updateIncrementColumnKey(step, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * Upserts a data extension row by object id.
     */
    it("should testUpsertRowObjectID response", function testUpsertRowObjectIDTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"values": {"LastLogin": "2013-05-23T14:32:00Z", "IsActive": true, "FirstName": "John", "FollowerCount": 2, "LastName": "Smith"}}, 'UpsertRowObjectIDRequest');

        controller.updateUpsertRowObjectID(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * Upserts a data extension row by key.
     */
    it("should testUpsertRowKey response", function testUpsertRowKeyTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"values": {"LastLogin": "2013-05-23T14:32:00Z", "IsActive": true, "FirstName": "John", "FollowerCount": 2, "LastName": "Smith"}}, 'UpsertRowKeyRequest');

        controller.updateUpsertRowKey(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * Upserts a batch of data extension rows by key.
     */
    it("should testUpsertRowSetKey response", function testUpsertRowSetKeyTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = [{"keys": {"Email": "someone@email.com"}, "values": {"LastLogin": "2013-05-23T14:32:00Z", "IsActive": true, "FirstName": "John", "FollowerCount": 2, "LastName": "Smith"}}, {"keys": {"Email": "someone2@email.com"}, "values": {"LastLogin": "2013-05-23T14:32:00Z", "IsActive": true, "FirstName": "Jane", "FollowerCount": 2, "LastName": "Smith"}}].map(elem => baseController.getObjectMapper().mapObject(elem, 'UpsertRowSetKeyRequest'));

        controller.createUpsertRowSetKey(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * Upserts a batch of data extension rows by object id.
     */
    it("should testUpsertRowSetObjectID response", function testUpsertRowSetObjectIDTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = [{"keys": {"Email": "someone@email.com"}, "values": {"LastLogin": "2013-05-23T14:32:00Z", "IsActive": true, "FirstName": "John", "FollowerCount": 2, "LastName": "Smith"}}, {"keys": {"Email": "someone2@email.com"}, "values": {"LastLogin": "2013-05-23T14:32:00Z", "IsActive": true, "FirstName": "Jane", "FollowerCount": 2, "LastName": "Smith"}}].map(elem => baseController.getObjectMapper().mapObject(elem, 'UpsertRowSetObjectIDRequest'));

        controller.createUpsertRowSetObjectID(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });
});
