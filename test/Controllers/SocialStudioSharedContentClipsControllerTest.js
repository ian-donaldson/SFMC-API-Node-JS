/*
 * SalesforceMarketingCloudLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
 'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.SocialStudioSharedContentClipsController;
const CreateSharedContentInWSRequest = testerlib.CreateSharedContentInWSRequest;
const CreateSharedContentRequest = testerlib.CreateSharedContentRequest;
const CreateSharedContentImageTypeFromScratchInWSRequest = testerlib.CreateSharedContentImageTypeFromScratchInWSRequest;
const CreateSharedContentAndAssociateItWithPostRequest = testerlib.CreateSharedContentAndAssociateItWithPostRequest;
const UnshareSharedContentRequest = testerlib.UnshareSharedContentRequest;

describe("SocialStudioSharedContentClipsController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * TODO: Add Description
     */
    it("should testListSharedContentItemsInWS response", function testListSharedContentItemsInWSTest(done) {
        // parameters for the API call
        let workspace = '{{ws}}';
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';

        controller.listSharedContentItemsInWS(workspace, accessToken, contentType, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testCreateSharedContentInWS response", function testCreateSharedContentInWSTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"message": "Message text", "description": "Optional description about why I am sharing this content to others", "assets": [{"url": "http://images.website.org/my image.jpg", "type": 2, "metadata": ""}], "workspaces": ["88c282e3-b33e-4109-bb86-9040c368bf75"], "workspace_id": "{{ws}}"}, 'CreateSharedContentInWSRequest');

        controller.createSharedContentInWS(accessToken, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testDeleteSharedContentInWS response", function testDeleteSharedContentInWSTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';

        controller.deleteSharedContentInWS(accessToken, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testRetrieveSharedContent response", function testRetrieveSharedContentTest(done) {
        // parameters for the API call
        let workspace = '{{workspaceId}}';
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';

        controller.retrieveSharedContent(workspace, accessToken, contentType, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testCreateSharedContent response", function testCreateSharedContentTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';
        let body = baseController.getObjectMapper().mapObject({"message": "Create Clip via API", "description": "sharing this clip", "workspaces": ["88c282e3-b33e-4109-bb86-9040c368bf75"], "workspace_id": "aa69ff7d-2b11-478a-9cc9-3fd3a5e1e19e"}, 'CreateSharedContentRequest');

        controller.createSharedContent(accessToken, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testCreateSharedContentImageTypeFromScratchInWS response", function testCreateSharedContentImageTypeFromScratchInWSTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"message": "Message text", "description": "Optional description about why I am sharing this content to others", "assets": [{"url": "/Users/abigail.grant/Pictures/NTO/winter hat.ong", "type": 2, "metadata": ""}], "workspaces": ["88c282e3-b33e-4109-bb86-9040c368bf75"], "workspace_id": "{{ws}}"}, 'CreateSharedContentImageTypeFromScratchInWSRequest');

        controller.createSharedContentImageTypeFromScratchInWS(accessToken, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testCreateSharedContentAndAssociateItWithPost response", function testCreateSharedContentAndAssociateItWithPostTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"post_id": "35a66d0d-aef8-4ad4-be83-a616c445d9fe", "message": "This duplicates that content from an existing post into a new piece of shared content, and associates them together when measuring performance of content.", "description": "This image did very well on Pinterest, please try it on your regional accounts.", "assets": [{"url": "http://www.foo.com/images/foo.png", "type": 2}], "workspaces": ["88c282e3-b33e-4109-bb86-9040c368bf75"], "workspace_id": "{{ws}}"}, 'CreateSharedContentAndAssociateItWithPostRequest');

        controller.createSharedContentAndAssociateItWithPost(accessToken, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testArchiveSharedContent response", function testArchiveSharedContentTest(done) {
        // parameters for the API call
        let action = 'archive';
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';

        controller.createArchiveSharedContent(action, accessToken, contentType, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testUnshareSharedContent response", function testUnshareSharedContentTest(done) {
        // parameters for the API call
        let action = 'unshare';
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"workspaces": ["a0fd4ce7-af4c-48b1-b6e8-0cb4ce54b2fc"]}, 'UnshareSharedContentRequest');

        controller.createUnshareSharedContent(action, accessToken, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });
});
