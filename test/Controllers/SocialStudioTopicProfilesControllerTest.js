/*
 * SalesforceMarketingCloudLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
 'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.SocialStudioTopicProfilesController;
const CreateTopicRequest = testerlib.CreateTopicRequest;
const UpdateTopicRequest = testerlib.UpdateTopicRequest;
const UpdateKeywordGroupInATopicProfileCopyRequest = testerlib.UpdateKeywordGroupInATopicProfileCopyRequest;
const UpdateSourceGroupInATopicProfileRequest = testerlib.UpdateSourceGroupInATopicProfileRequest;

describe("SocialStudioTopicProfilesController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * TODO: Add Description
     */
    it("should testListTopics response", function testListTopicsTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';

        controller.listTopics(accessToken, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testListTopicsByName response", function testListTopicsByNameTest(done) {
        // parameters for the API call
        let q = 'winter';
        let accessToken = '{{access_token}}';

        controller.listTopicsByName(q, accessToken, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testListTopicsByStatusAndCreation response", function testListTopicsByStatusAndCreationTest(done) {
        // parameters for the API call
        let limit = 5;
        let offset = 0;
        let orderBy = 'creation asc';
        let status = 1;
        let accessToken = '{{access_token}}';

        controller.listTopicsByStatusAndCreation(limit, offset, orderBy, status, accessToken, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testCreateTopic response", function testCreateTopicTest(done) {
        // parameters for the API call
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"title": "API Test TP3", "languages": ["1"], "mediaTypes": [{"id": "5"}, {"id": "1"}, {"id": "10"}]}, 'CreateTopicRequest');

        controller.createTopic(accessToken, contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testActivateTopic response", function testActivateTopicTest(done) {
        // parameters for the API call
        let method = 'activate';
        let billingCode = '{billingCode}';
        let accessToken = '{{access_token}}';
        let contentType = 'application/json';

        controller.createActivateTopic(method, billingCode, accessToken, contentType, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

});
