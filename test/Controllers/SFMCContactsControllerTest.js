/*
 * SalesforceMarketingCloudLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */
 'use strict';

const chai = require('chai');
const assert = chai.assert;
const TestHelper = require("../TestHelper");
const APIHelper = require("../../lib/APIHelper");
const testerlib = require("../../lib");
const testConfiguration = require("../TestBootstrap");
const baseController = require("../../lib/Controllers/BaseController");

const controller = testerlib.SFMCContactsController;
const CreateContactRequest = testerlib.CreateContactRequest;

describe("SFMCContactsController Tests", function tests() {
    this.timeout(testConfiguration.TEST_TIMEOUT);

    /**
     * TODO: Add Description
     */
    it("should testAttributeGroups response", function testAttributeGroupsTest(done) {
        // parameters for the API call
        let contentType = 'application/json';

        controller.getAttributeGroups(contentType, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testSchemas response", function testSchemasTest(done) {
        // parameters for the API call
        let contentType = 'application/json';

        controller.getSchemas(contentType, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * TODO: Add Description
     */
    it("should testDiscovery response", function testDiscoveryTest(done) {
        // parameters for the API call
        let contentType = 'application/json';

        controller.getDiscovery(contentType, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });

    /**
     * The contact resource allows you to create a new contact with the specified information in the specified attribute groups.
     */
    it("should testCreateContact response", function testCreateContactTest(done) {
        // parameters for the API call
        let contentType = 'application/json';
        let body = baseController.getObjectMapper().mapObject({"contactKey": "123456", "contactId": "null", "attributeSets": [{"name": "Email Addresses", "items": [{"values": [{"name": "Email Address", "value": "dummy@mail.com"}]}]}, {"name": "Email Demographics", "items": [{"values": [{"name": "Last Name", "value": "{{lastName}}"}, {"name": "First Name", "value": "{{firstName}}"}, {"name": "Text Profile Attribute", "value": "value 1"}, {"name": "Number Profile Attribute", "value": "12345"}]}]}, {"name": "MobileConnect Demographics", "items": [{"values": [{"name": "Mobile Number", "value": "555-555-5555"}]}]}, {"name": "MobilePush Demographics", "items": [{"values": [{"name": "Device ID", "value": "958405948"}, {"name": "Application", "value": "958405948"}]}]}]}, 'CreateContactRequest');

        controller.createContact(contentType, body, function callback(error, response, context) {
            // test response code
            assert.equal(200, context.response.statusCode);
            done();
        });
    });
});
