/**
 * SalesforceMarketingCloudLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const UpdateAWorkspaceRequest = require('../lib/Models/UpdateAWorkspaceRequest');
const CreateAWSRequest = require('../lib/Models/CreateAWSRequest');
const ChangeUserPasswordRequest = require('../lib/Models/ChangeUserPasswordRequest');
const UpdateKeywordGroupInATopicProfileCopyRequest =
  require('../lib/Models/UpdateKeywordGroupInATopicProfileCopyRequest');
const MediaType = require('../lib/Models/MediaType');
const UpdateSourceRequest = require('../lib/Models/UpdateSourceRequest');
const CreateSourceRequest = require('../lib/Models/CreateSourceRequest');
const UnshareSharedContentRequest = require('../lib/Models/UnshareSharedContentRequest');
const Asset91 = require('../lib/Models/Asset91');
const Contain79 = require('../lib/Models/Contain79');
const AndContain = require('../lib/Models/AndContain');
const Contain = require('../lib/Models/Contain');
const Parameter = require('../lib/Models/Parameter');
const ApplyAuthorCommentRequest = require('../lib/Models/ApplyAuthorCommentRequest');
const DeleteATagFromAnAuthorRequest = require('../lib/Models/DeleteATagFromAnAuthorRequest');
const ApplyAuthorTagRequest = require('../lib/Models/ApplyAuthorTagRequest');
const From = require('../lib/Models/From');
const IncludedAudience = require('../lib/Models/IncludedAudience');
const Keys52 = require('../lib/Models/Keys52');
const Subscriber = require('../lib/Models/Subscriber');
const Attribute = require('../lib/Models/Attribute');
const IncrementColumnObjectIDRequest = require('../lib/Models/IncrementColumnObjectIDRequest');
const IncrementColumnKeyRequest = require('../lib/Models/IncrementColumnKeyRequest');
const UpsertRowObjectIDRequest = require('../lib/Models/UpsertRowObjectIDRequest');
const UpsertRowKeyRequest = require('../lib/Models/UpsertRowKeyRequest');
const UpsertRowSetKeyRequest = require('../lib/Models/UpsertRowSetKeyRequest');
const EngageMacroRemovedFromWSRequest = require('../lib/Models/EngageMacroRemovedFromWSRequest');
const EngageMacroToAWSRequest = require('../lib/Models/EngageMacroToAWSRequest');
const UserRemovedFromWSRequest = require('../lib/Models/UserRemovedFromWSRequest');
const UserToAWSRequest = require('../lib/Models/UserToAWSRequest');
const PublishMacroRemovedFromWSRequest = require('../lib/Models/PublishMacroRemovedFromWSRequest');
const PublishMacroToAWSRequest = require('../lib/Models/PublishMacroToAWSRequest');
const DeleteAWorkspaceRequest = require('../lib/Models/DeleteAWorkspaceRequest');
const UpdateSourceGroupInATopicProfileRequest =
  require('../lib/Models/UpdateSourceGroupInATopicProfileRequest');
const UpdateTopicRequest = require('../lib/Models/UpdateTopicRequest');
const CreateTopicRequest = require('../lib/Models/CreateTopicRequest');
const Keys = require('../lib/Models/Keys');
const UpsertRowSetObjectIDRequest = require('../lib/Models/UpsertRowSetObjectIDRequest');
const UpdateSourceGroupRequest = require('../lib/Models/UpdateSourceGroupRequest');
const CreateSourceGroupRequest = require('../lib/Models/CreateSourceGroupRequest');
const CreateSharedContentRequest = require('../lib/Models/CreateSharedContentRequest');
const Asset = require('../lib/Models/Asset');
const Item84 = require('../lib/Models/Item84');
const ApprovalProceduresERRORSRequest = require('../lib/Models/ApprovalProceduresERRORSRequest');
const CreateApprovalFlowAkaRuleRequest = require('../lib/Models/CreateApprovalFlowAkaRuleRequest');
const UpdateKeywordGroupInATopicProfileRequest =
  require('../lib/Models/UpdateKeywordGroupInATopicProfileRequest');
const CreateKeywordGroupRequest = require('../lib/Models/CreateKeywordGroupRequest');
const UpdateTopicKeywordGroupRequest = require('../lib/Models/UpdateTopicKeywordGroupRequest');
const EditMacroRequest = require('../lib/Models/EditMacroRequest');
const CreateSendToSalesforceMacroRequest =
  require('../lib/Models/CreateSendToSalesforceMacroRequest');
const CreateMacroAllActionsRequest = require('../lib/Models/CreateMacroAllActionsRequest');
const Value = require('../lib/Models/Value');
const Item = require('../lib/Models/Item');
const AttributeSet = require('../lib/Models/AttributeSet');
const Action = require('../lib/Models/Action');
const AssociateAssetSToACampaignRequest =
  require('../lib/Models/AssociateAssetSToACampaignRequest');
const CreateMacroRequest = require('../lib/Models/CreateMacroRequest');
const PushSendByMessageIdRequest = require('../lib/Models/PushSendByMessageIdRequest');
const ContactAttributes = require('../lib/Models/ContactAttributes');
const To = require('../lib/Models/To');
const MessageDefinitionSendEmailRequest =
  require('../lib/Models/MessageDefinitionSendEmailRequest');
const Application = require('../lib/Models/Application');
const QueueMORequest = require('../lib/Models/QueueMORequest');
const Center = require('../lib/Models/Center');
const Values = require('../lib/Models/Values');
const AssetRequest = require('../lib/Models/AssetRequest');
const CreateContactRequest = require('../lib/Models/CreateContactRequest');
const ValidateEmailRequest = require('../lib/Models/ValidateEmailRequest');
const RequestSFMCTokenRequest = require('../lib/Models/RequestSFMCTokenRequest');
const CreateSharedContentAndAssociateItWithPostRequest =
  require('../lib/Models/CreateSharedContentAndAssociateItWithPostRequest');
const CreateSharedContentImageTypeFromScratchInWSRequest =
  require('../lib/Models/CreateSharedContentImageTypeFromScratchInWSRequest');
const CreateSharedContentInWSRequest = require('../lib/Models/CreateSharedContentInWSRequest');
const CreateACampaignRequest = require('../lib/Models/CreateACampaignRequest');
const SubscriberAttributes = require('../lib/Models/SubscriberAttributes');
const MessageSendRequest = require('../lib/Models/MessageSendRequest');
const CreateLocationRequest = require('../lib/Models/CreateLocationRequest');
const UpdateUserRequest = require('../lib/Models/UpdateUserRequest');
const CreateMessageRequest = require('../lib/Models/CreateMessageRequest');

const classMap = {
    UpdateAWorkspaceRequest,
    CreateAWSRequest,
    ChangeUserPasswordRequest,
    UpdateKeywordGroupInATopicProfileCopyRequest,
    MediaType,
    UpdateSourceRequest,
    CreateSourceRequest,
    UnshareSharedContentRequest,
    Asset91,
    Contain79,
    AndContain,
    Contain,
    Parameter,
    ApplyAuthorCommentRequest,
    DeleteATagFromAnAuthorRequest,
    ApplyAuthorTagRequest,
    From,
    IncludedAudience,
    Keys52,
    Subscriber,
    Attribute,
    IncrementColumnObjectIDRequest,
    IncrementColumnKeyRequest,
    UpsertRowObjectIDRequest,
    UpsertRowKeyRequest,
    UpsertRowSetKeyRequest,
    EngageMacroRemovedFromWSRequest,
    EngageMacroToAWSRequest,
    UserRemovedFromWSRequest,
    UserToAWSRequest,
    PublishMacroRemovedFromWSRequest,
    PublishMacroToAWSRequest,
    DeleteAWorkspaceRequest,
    UpdateSourceGroupInATopicProfileRequest,
    UpdateTopicRequest,
    CreateTopicRequest,
    Keys,
    UpsertRowSetObjectIDRequest,
    UpdateSourceGroupRequest,
    CreateSourceGroupRequest,
    CreateSharedContentRequest,
    Asset,
    Item84,
    ApprovalProceduresERRORSRequest,
    CreateApprovalFlowAkaRuleRequest,
    UpdateKeywordGroupInATopicProfileRequest,
    CreateKeywordGroupRequest,
    UpdateTopicKeywordGroupRequest,
    EditMacroRequest,
    CreateSendToSalesforceMacroRequest,
    CreateMacroAllActionsRequest,
    Value,
    Item,
    AttributeSet,
    Action,
    AssociateAssetSToACampaignRequest,
    CreateMacroRequest,
    PushSendByMessageIdRequest,
    ContactAttributes,
    To,
    MessageDefinitionSendEmailRequest,
    Application,
    QueueMORequest,
    Center,
    Values,
    AssetRequest,
    CreateContactRequest,
    ValidateEmailRequest,
    RequestSFMCTokenRequest,
    CreateSharedContentAndAssociateItWithPostRequest,
    CreateSharedContentImageTypeFromScratchInWSRequest,
    CreateSharedContentInWSRequest,
    CreateACampaignRequest,
    SubscriberAttributes,
    MessageSendRequest,
    CreateLocationRequest,
    UpdateUserRequest,
    CreateMessageRequest,
};

/**
 * Factory class to create instances of models and exception classes
 */
class ModelFactory {
    /**
     * Creates instance of a model class
     * @param  modelName  {string}  Name of class to instantiate
     * @returns  {object} Instance of the model class
     */
    static getInstance(modelName) {
        return new classMap[modelName]();
    }
}

module.exports = ModelFactory;
