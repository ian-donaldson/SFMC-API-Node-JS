/**
 * SalesforceMarketingCloudLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of UpdateUserRequest
 */
class UpdateUserRequest extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.title = this.constructor.getValue(obj.title);
        this.username = this.constructor.getValue(obj.username);
        this.displayName = this.constructor.getValue(obj.displayName);
        this.email = this.constructor.getValue(obj.email);
        this.timeZone = this.constructor.getValue(obj.timeZone);
        this.enabled = this.constructor.getValue(obj.enabled);
        this.avatarURL = this.constructor.getValue(obj.avatarURL);
        this.userRoleId = this.constructor.getValue(obj.userRoleId);
        this.orgRoleId = this.constructor.getValue(obj.orgRoleId);
        this.languageId = this.constructor.getValue(obj.languageId);
        this.clientId = this.constructor.getValue(obj.clientId);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'title', realName: 'title' },
            { name: 'username', realName: 'username' },
            { name: 'displayName', realName: 'displayName' },
            { name: 'email', realName: 'email' },
            { name: 'timeZone', realName: 'timeZone' },
            { name: 'enabled', realName: 'enabled' },
            { name: 'avatarURL', realName: 'avatarURL' },
            { name: 'userRoleId', realName: 'userRoleId' },
            { name: 'orgRoleId', realName: 'orgRoleId' },
            { name: 'languageId', realName: 'languageId' },
            { name: 'clientId', realName: 'clientId' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = UpdateUserRequest;
